var relearn_searchindex = [
  {
    "breadcrumb": "Самый быстрый в мире фреймворк для создания сайтов",
    "content": "Быстрый и гибкий генератор статических сайтов, созданный с любовью bep, spf13 и друзьями в Go.\nHugo оптимизирован для скорости и разработан для гибкости. Благодаря продвинутой системе шаблонов и быстрым конвейерам активов Hugo создает полный сайт за несколько секунд, а зачастую и меньше.\nНиже вы найдете несколько наиболее распространенных и полезных страниц из нашей документации.",
    "description": "Hugo - это самый быстрый в мире движок для создания статических сайтов. Он написан на языке Go (он же Golang) и разработан bep, spf13 и друзьями.",
    "tags": [],
    "title": "Документация Hugo",
    "uri": "/documentation/index.html"
  },
  {
    "breadcrumb": "Самый быстрый в мире фреймворк для создания сайтов",
    "content": "Одна из самых сильных сторон Hugo - его увлеченное и постоянно развивающееся сообщество разработчиков. За исключением шорткода highlight, упомянутого в разделе Подсветка синтаксиса, инструменты и другие проекты, представленные в этом разделе, являются предложениями как коммерческих сервисов, так и проектов с открытым исходным кодом, многие из которых разработаны такими же разработчиками Hugo, как и вы.\nПосмотрите на популярность Hugo по сравнению с другими генераторами статических сайтов.",
    "description": "В дополнение к мощному CLI Hugo существует большое количество цепочек инструментов, разработанных сообществом для разработчиков Hugo.",
    "tags": [],
    "title": "Инструменты разработчика",
    "uri": "/tools/index.html"
  },
  {
    "breadcrumb": "Самый быстрый в мире фреймворк для создания сайтов",
    "content": "Генератор статических сайтов должен выходить за пределы фронт-материала и пары шаблонов, чтобы быть масштабируемым и управляемым. Hugo был разработан с учетом интересов не только разработчиков, но и контент-менеджеров и авторов.",
    "description": "Hugo упрощает управление большими статическими сайтами благодаря поддержке архетипов, типов контента, меню, перекрестных ссылок, резюме и многого другого.",
    "tags": [],
    "title": "Управление содержимым",
    "uri": "/content-management/index.html"
  },
  {
    "breadcrumb": "Самый быстрый в мире фреймворк для создания сайтов",
    "content": "Узнайте о Hugo и его возможностях, защите конфиденциальности и модели безопасности.",
    "description": "Узнайте о Hugo и его возможностях, модели безопасности и защите конфиденциальности.",
    "tags": [],
    "title": "О Hugo",
    "uri": "/about/index.html"
  },
  {
    "breadcrumb": "Самый быстрый в мире фреймворк для создания сайтов \u003e О Hugo",
    "content": "Hugo - это генератор статических сайтов, написанный на Go, оптимизированный для скорости и разработанный для гибкости. Благодаря продвинутой системе шаблонов и быстрым конвейерам активов, Hugo создает полноценный сайт за несколько секунд, а зачастую и меньше.\nБлагодаря гибкому фреймворку, многоязыковой поддержке и мощной системе таксономии Hugo широко используется для создания:\nКорпоративных, правительственных, некоммерческих, образовательных, новостных, событийных и проектных сайтов. Сайтов документации Портфолио изображений Лендингов Деловых, профессиональных и личных блогов Резюме и автобиографий Используйте встроенный веб-сервер Hugo во время разработки, чтобы мгновенно увидеть изменения в контенте, структуре, поведении и представлении. Затем разверните сайт на своем хосте или передайте изменения своему Git-провайдеру для автоматической сборки и развертывания.\nА с помощью модулей Hugo вы можете делиться контентом, активами, данными, переводами, темами, шаблонами и конфигурацией с другими проектами через публичные или частные Git-репозитории.\nУзнайте больше о возможностях, защите конфиденциальности и модели безопасности Hugo.",
    "description": "Hugo - это генератор статических сайтов, написанный на языке Go, оптимизированный для скорости и разработанный для гибкости.",
    "tags": [],
    "title": "Введение",
    "uri": "/about/introduction/index.html"
  },
  {
    "breadcrumb": "Самый быстрый в мире фреймворк для создания сайтов \u003e О Hugo",
    "content": "Фреймворк Мультиплатформенность Установите единственный исполняемый файл Hugo на Linux, macOS, Windows и другие платформы. Мультиязычность Локализуйте проект для каждого языка и региона, включая переводы, изображения, даты, валюты, числа, проценты и последовательность символов. Мультиязычный фреймворк Hugo поддерживает однохостовые и многохостовые конфигурации. Форматы вывода Верните каждую страницу вашего сайта в один или несколько выходных форматов, с возможностью детального контроля по типу страницы, разделу и пути. Хотя по умолчанию используется формат HTML, вы можете добавить JSON, RSS, CSV и другие. Например, создайте REST API для доступа к содержимому. Шаблоны Создавайте шаблоны с помощью переменных, функций и методов для преобразования содержимого, ресурсов и данных в опубликованную страницу. Хотя шаблоны HTML являются наиболее распространенными, вы можете создавать шаблоны для любого формата вывода. Темы Сократите время и стоимость разработки, используя одну из сотен тем, созданных сообществом Hugo. Темы доступны для корпоративных сайтов, проектов документации, портфолио изображений, целевых страниц, личных и профессиональных блогов, резюме, автобиографий и многого другого. Модули Сократите время и стоимость разработки за счет создания или импорта упакованных комбинаций архетипов, активов, контента, данных, шаблонов, таблиц перевода, статических файлов или параметров конфигурации. Модуль может служить основой для нового сайта или дополнять существующий. Приватность Настройте поведение встроенных шаблонов и шорткодов Hugo, чтобы обеспечить соответствие региональным нормам конфиденциальности, включая GDPR и CCPA. Безопасность Модель безопасности Hugo основана на том, что авторам шаблонов и конфигураций доверяют, а авторам контента - нет. Эта модель позволяет генерировать HTML-вывод, защищенный от внедрения кода. Другие средства защиты предотвращают «пересылку» в произвольные приложения, ограничивают доступ к определенным переменным окружения, предотвращают соединения с произвольными удаленными источниками данных и многое другое. Создание контента Форматы контента Создавайте контент с помощью Markdown, HTML, AsciiDoc, Emacs Org Mode, Pandoc или reStructuredText. По умолчанию используется формат Markdown, соответствующий спецификациям CommonMark и GitHub Flavored Markdown. Атрибуты Markdown Применяйте атрибуты HTML, такие как class и id, к изображениям и блочным элементам Markdown, включая блочные кавычки, блоки кода, заголовки, горизонтальные линии, списки, абзацы и таблицы. Расширения Markdown Используйте встроенные расширения Markdown для создания таблиц, списков определений, сносок, списков задач, вставленного текста, маркированного текста, подписей, надписей и многого другого. Хуки для рендеринга Markdown Переопределите преобразование Markdown в HTML при отображении блочных цитат, огражденных блоков кода, заголовков, изображений, ссылок и таблиц. Например, каждое отдельное изображение отображается как элемент HTML figure. Диаграммы Используйте огражденные блоки кода и хуки рендеринга Markdown для включения диаграмм в содержимое. Математика Включайте математические уравнения и выражения в Markdown, используя синтаксис набора LaTeX или TeX. Подсветка синтаксиса Синтаксически выделяйте примеры кода с помощью встроенного в Hugo синтаксического маркера, который по умолчанию включен для блоков кода в Markdown. Выделитель синтаксиса поддерживает сотни языков кода и десятки стилей. Шорткоды Используйте встроенные шорткоды Hugo или создавайте свои собственные для вставки сложного контента. Например, с помощью шорткодов можно включать элементы аудио и видео, выводить таблицы из локальных или удаленных источников данных, вставлять фрагменты с других страниц и многое другое. Управление контентом Адаптеры контента Создавайте адаптеры контента для динамического добавления содержимого при создании сайта. Например, используйте адаптер контента для создания страниц из удаленного источника данных, такого как JSON, TOML, YAML или XML. Таксономия Классифицируйте содержимое для установки простых или сложных логических связей между страницами. Например, создайте таксономию авторов и назначьте одного или нескольких авторов для каждой страницы. Помимо прочего, система таксономии обеспечивает инвертированный, взвешенный индекс для вывода списка связанных страниц, упорядоченных по релевантности. Данные Дополните свой контент, используя локальные или удаленные источники данных, включая CSV, JSON, TOML, YAML и XML. Например, создайте шорткод для вывода HTML-таблицы из удаленного CSV-файла. Меню Provide rapid access to content via Hugo’s menu system, configured automatically, globally, or on a page-by-page basis. The menu system is a key component of Hugo’s multilingual architecture. Управление URL Подача любой страницы с любого пути с помощью глобальной конфигурации или постранично. Конвейеры активов Обработка изображений Конвертируйте, изменяйте размер, кадрируйте, поворачивайте, настраивайте цвета, применяйте фильтры, накладывайте текст и изображения, извлекайте данные EXIF. Комплектация JavaScript Транспайлинг TypeScript и JSX в JavaScript, пакетирование, древовидный шейпинг, минификация, создание карт исходников и выполнение SRI-хеширования. Обработка Sass Транспайлинг Sass в CSS, пакетирование, древовидный шейпинг, минификация, создание карт исходников, хеширование SRI и интеграция с PostCSS. Обработка Tailwind CSS Компилируйте классы утилит Tailwind CSS в стандартный CSS, объединяйте, перемешивайте деревья, оптимизируйте, минимизируйте, выполняйте SRI-хеширование и интегрируйте с PostCSS. Производительность Кэширование Сократите время и затраты на создание сайта за счет однократного рендеринга частичного шаблона и последующего кэширования результата, глобального или в определенном контексте. Например, кэшируйте результат конвейера активов, чтобы избежать повторной обработки на каждой отрисованной странице. Сегментация Сократите время и затраты на создание сайта, разбив свои сайты на сегменты. Например, главная страница и «новостной раздел» рендерятся каждый час, а весь сайт - раз в неделю. Минификация Минифицируйте HTML, CSS и JavaScript чтобы уменьшить размер файла, пропускную способность и время загрузки.",
    "description": "Богатый и мощный набор функций Hugo обеспечивает основу и инструменты для создания статических сайтов, создаваемых за несколько секунд, а зачастую и меньше.",
    "tags": [],
    "title": "Функциональность",
    "uri": "/about/features/index.html"
  },
  {
    "breadcrumb": "Самый быстрый в мире фреймворк для создания сайтов \u003e О Hugo",
    "content": "General Data Protection Regulation (GDPR) is a regulation in EU law on data protection and privacy for all individuals within the European Union and the European Economic Area. It became enforceable on 25 May 2018.\nHugo is a static site generator. By using Hugo you are already standing on very solid ground. Static HTML files on disk are much easier to reason about compared to server and database driven websites.\nBut even static websites can integrate with external services, so from version 0.41, Hugo provides a privacy configuration that covers the relevant built-in templates.\nNote that:\nThese settings have their defaults setting set to off, i.e. how it worked before Hugo 0.41. You must do your own evaluation of your site and apply the appropriate settings. These settings work with the embedded templates. Some theme may contain custom templates for embedding services like Google Analytics. In that case these options have no effect. We will continue this work and improve this further in future Hugo versions. All privacy settings Below are all privacy settings and their default value. These settings need to be put in your site configuration (e.g. hugo.toml).\n[privacy] [privacy.disqus] disable = false [privacy.googleAnalytics] disable = false respectDoNotTrack = false [privacy.instagram] disable = false simple = false [privacy.twitter] disable = false enableDNT = false simple = false [privacy.vimeo] disable = false enableDNT = false simple = false [privacy.youtube] disable = false privacyEnhanced = false Disable all services An example privacy configuration that disables all the relevant services in Hugo. With this configuration, the other settings will not matter.\n[privacy] [privacy.disqus] disable = true [privacy.googleAnalytics] disable = true [privacy.instagram] disable = true [privacy.twitter] disable = true [privacy.vimeo] disable = true [privacy.youtube] disable = true The privacy settings explained GoogleAnalytics respectDoNotTrack Enabling this will make the GA templates respect the “Do Not Track” HTTP header. Instagram simple If simple mode is enabled, a static and no-JS version of the Instagram image card will be built. Note that this only supports image cards and the image itself will be fetched from Instagram’s servers. Note: If you use the simple mode for Instagram and a site styled with Bootstrap 4, you may want to disable the inline styles provided by Hugo:\n[services] [services.instagram] disableInlineCSS = true Twitter enableDNT Enabling this for the twitter/tweet shortcode, the tweet and its embedded page on your site are not used for purposes that include personalized suggestions and personalized ads. simple If simple mode is enabled, a static and no-JS version of a tweet will be built. Note: If you use the simple mode for Twitter, you may want to disable the inline styles provided by Hugo:\n[services] [services.twitter] disableInlineCSS = true YouTube privacyEnhanced When you turn on privacy-enhanced mode, YouTube won’t store information about visitors on your website unless the user plays the embedded video. Vimeo enableDNT Enabling this for the vimeo shortcode, the Vimeo player will be blocked from tracking any session data, including all cookies and stats. simple If simple mode is enabled, the video thumbnail is fetched from Vimeo’s servers and it is overlaid with a play button. If the user clicks to play the video, it will open in a new tab directly on Vimeo’s website.",
    "description": "Настройте свой сайт так, чтобы он соответствовал региональным нормам конфиденциальности.",
    "tags": [],
    "title": "Приватность",
    "uri": "/about/privacy/index.html"
  },
  {
    "breadcrumb": "Самый быстрый в мире фреймворк для создания сайтов \u003e О Hugo",
    "content": "Runtime security Hugo produces static output, so once built, the runtime is the browser (assuming the output is HTML) and any server (API) that you integrate with.\nBut when developing and building your site, the runtime is the hugo executable. Securing a runtime can be a real challenge.\nHugo’s main approach is that of sandboxing and a security policy with strict defaults:\nHugo has a virtual file system and only the main project (not third-party components) is allowed to mount directories or files outside the project root. User-defined components have read-only access to the filesystem. We shell out to some external binaries to support Asciidoctor and similar, but those binaries and their flags are predefined and disabled by default (see Security Policy). General functions to run arbitrary external OS commands have been discussed, but not implemented because of security concerns. Security policy Hugo has a built-in security policy that restricts access to os/exec, remote communication and similar.\nThe default configuration is listed below. Any build using features not in the allow list of the security policy will fail with a detailed message about what needs to be done. Most of these settings are allow lists (string or slice, Regular Expressions or none which matches nothing).\nBy default, Hugo permits the resources.GetRemote function to download files with media types corresponding to an internal allow list. To add media types to the allow list:\n[security.http] mediaTypes = ['^image/avif$'] Note that these and other configuration settings in Hugo can be overridden by the OS environment. For example, if you want to block all remote HTTP fetching of data:\nHUGO_SECURITY_HTTP_URLS=none hugo Dependency security Hugo is built as a static binary using Go Modules to manage its dependencies. Go Modules have several safeguards, one of them being the go.sum file. This is a database of the expected cryptographic checksums of all of your dependencies, including transitive dependencies.\nHugo Modules is a feature built on top of the functionality of Go Modules. Like Go Modules, a Hugo project using Hugo Modules will have a go.sum file. We recommend that you commit this file to your version control system. The Hugo build will fail if there is a checksum mismatch, which would be an indication of dependency tampering.\nWeb application security These are the security threats as defined by OWASP.\nFor HTML output, this is the core security model:\nhttps://pkg.go.dev/html/template#hdr-Security_Model\nIn short:\nTemplate and configuration authors (you) are trusted, but the data you send in is not. This is why you sometimes need to use the safe functions, such as safeHTML, to avoid escaping of data you know is safe. There is one exception to the above, as noted in the documentation: If you enable inline shortcodes, you also say that the shortcodes and data handling in content files are trusted, as those macros are treated as pure text. It may be worth adding that Hugo is a static site generator with no concept of dynamic user input.\nFor content, the default Markdown renderer is configured to remove or escape potentially unsafe content. This behavior can be reconfigured if you trust your content.",
    "description": "Краткое описание модели безопасности Hugo.",
    "tags": [],
    "title": "Модель безопасности",
    "uri": "/about/security/index.html"
  },
  {
    "breadcrumb": "Самый быстрый в мире фреймворк для создания сайтов \u003e О Hugo",
    "content": "Apache License Version 2.0, January 2004 http://www.apache.org/licenses/\nTerms and Conditions for use, reproduction, and distribution 1. Definitions “License” shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document.\n“Licensor” shall mean the copyright owner or entity authorized by the copyright owner that is granting the License.\n“Legal Entity” shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, “control” means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity.\n“You” (or “Your”) shall mean an individual or Legal Entity exercising permissions granted by this License.\n“Source” form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files.\n“Object” form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types.\n“Work” shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below).\n“Derivative Works” shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof.\n“Contribution” shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, “submitted” means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as “Not a Contribution.”\n“Contributor” shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work.\n2. Grant of Copyright License Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form.\n3. Grant of Patent License Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed.\n4. Redistribution You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions:\n(a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a “NOTICE” text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License.\n5. Submission of Contributions Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions.\n6. Trademarks This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file.\n7. Disclaimer of Warranty Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an “AS IS” BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License.\n8. Limitation of Liability In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages.\n9. Accepting Warranty or Additional Liability While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability.",
    "description": "Hugo распространяется под Apache 2.0 license.",
    "tags": [],
    "title": "Лицензия",
    "uri": "/about/license/index.html"
  },
  {
    "breadcrumb": "Самый быстрый в мире фреймворк для создания сайтов \u003e Управление содержимым",
    "content": "Обзор Чтобы создать меню для вашего сайта, выполните следующие действия:\nОпределите пункты меню Локализуйте каждый пункт Оформите меню в виде шаблона Создайте несколько меню, плоских или вложенных. Например, создайте главное меню для верхнего колонтитула и отдельное меню для нижнего колонтитула.\nСуществует три способа определения пунктов меню:\nАвтоматически На главной странице В конфигурации сайта Хотя вы можете использовать эти методы в комбинации при определении меню, меню будет проще концептуализировать и поддерживать, если вы будете использовать один метод для всего сайта.\nАвтоматическое определение Чтобы автоматически определить пункт меню для каждого верхнего уровня раздела вашего сайта, включите меню страниц раздела в конфигурации сайта. sectionPagesMenu: main Это создает структуру меню, к которой вы можете обращаться с помощью site.Menus.main в ваших шаблонах. Подробности см. в разделе Шаблоны меню.\nОпределение на главной странице Чтобы добавить страницу в “Главное” (main) меню:\n--- menus: main title: About --- Обратитесь к записи с помощью site.Menus.main в ваших шаблонах. Подробности см. в разделе Шаблоны меню.\nЧтобы добавить страницу в меню «главная» и «нижний колонтитул»:\ncontent/contact.md\n--- menus: - main - footer title: Contact --- В ваших шаблонах доступ к этому пункту осуществляется с помощью site.Menus.main и site.Menus.footer. Подробности см. в разделе Шаблоны меню.\nВ приведенных выше примерах ключом конфигурации является menus. Ключ конфигурации menu (единственное число) является псевдонимом для menus.\nСвойства Используйте эти свойства при определении пунктов меню во фронтальном материале:\nidentifier (string) Требуется, когда два или более пункта меню имеют одинаковое name, или при локализации name с помощью таблиц перевода. Должно начинаться с буквы, за которой следуют буквы, цифры или символы подчеркивания. name (string) Текст, который будет отображаться при рендеринге пункта меню. params (map) Пользовательские свойства для пункта меню. parent (string) identifier родительского пункта меню. Если identifier не определен, используйте name. Требуется для дочерних пунктов во вложенном меню. post (string) HTML, добавляемый при отображении пункта меню. pre (string) HTML для добавления при отображении пункта меню. title (string) Атрибут HTML title отображаемого пункта меню. weight (int) Целое ненулевое число, указывающее на позицию пункта относительно корня меню или его родителя для дочернего пункта. Более легкие пункты плавают вверху, а более тяжелые опускаются вниз. Пример Этот пункт меню первой страницы демонстрирует некоторые из доступных свойств:\n--- menus: main: - params: class: center parent: Products pre: \u003ci class=\"fa-solid fa-code\"\u003e\u003c/i\u003e weight: 20 title: Software --- Обратитесь к записи с помощью site.Menus.main в ваших шаблонах. Подробности см. в разделе Шаблоны меню.\nОпределение в конфигурации сайта Чтобы определить пункты “главного” меню:\nmenus: main: - name: Home pageRef: / weight: 10 - name: Products pageRef: /products weight: 20 - name: Services pageRef: /services weight: 30 Это создает структуру меню, к которой вы можете обращаться с помощью site.Menus.main в ваших шаблонах. Подробности см. в разделе Шаблоны меню.\nЧтобы определить пункты для меню “нижний колонтитул” (footer):\nmenus: footer: - name: Terms pageRef: /terms weight: 10 - name: Privacy pageRef: /privacy weight: 20 Это создает структуру меню, к которой вы можете обращаться с помощью site.Menus.footer в ваших шаблонах. Подробности см. в разделе Шаблоны меню.\nВ приведенных выше примерах ключом конфигурации является menus. Ключ конфигурации menu (единственное число) является псевдонимом для menus.\nСвойства Свойства, доступные для пунктов меню, определенных на главной странице, также доступны для пунктов меню, определенных в конфигурации сайта.\nКаждый пункт меню, определенный в конфигурации сайта, требует двух или более свойств:\nУкажите name и pageRef для внутренних ссылок Укажите name и url для внешних ссылок pageRef (string) Логический путь к целевой странице, относительно каталога content. Опустите код языка и расширение файла. Требуется для внутренних ссылок. Kind pageRef home / page /books/book-1 section /books taxonomy /tags term /tags/foo url (string) Требуется для внешних ссылок. Пример Это вложенное меню демонстрирует некоторые из доступных свойств:\nmenus: main: - name: Products pageRef: /products weight: 10 - name: Hardware pageRef: /products/hardware parent: Products weight: 1 - name: Software pageRef: /products/software parent: Products weight: 2 - name: Services pageRef: /services weight: 20 - name: Hugo params: rel: external pre: \u003ci class=\"fa fa-heart\"\u003e\u003c/i\u003e url: https://gohugo.io/ weight: 30 [[menus.main]] name = 'Products' pageRef = '/products' weight = 10 [[menus.main]] name = 'Hardware' pageRef = '/products/hardware' parent = 'Products' weight = 1 [[menus.main]] name = 'Software' pageRef = '/products/software' parent = 'Products' weight = 2 [[menus.main]] name = 'Services' pageRef = '/services' weight = 20 [[menus.main]] name = 'Hugo' pre = '\u003ci class=\"fa fa-heart\"\u003e\u003c/i\u003e' url = 'https://gohugo.io/' weight = 30 [menus.main.params] rel = 'external' Это создает структуру меню, к которой вы можете обращаться с помощью site.Menus.main в ваших шаблонах. Подробности см. в разделе Шаблоны меню.\nЛокализация Hugo предоставляет два метода локализации пунктов меню. Смотрите мультиязычность.\nРендер Смотри шаблоны меню.",
    "description": "Создайте меню, определив пункты, локализовав каждый из них и отобразив полученную структуру данных.",
    "tags": [],
    "title": "Меню",
    "uri": "/content-management/menus/index.html"
  },
  {
    "breadcrumb": "Самый быстрый в мире фреймворк для создания сайтов",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Commands",
    "uri": "/commands/index.html"
  },
  {
    "breadcrumb": "Самый быстрый в мире фреймворк для создания сайтов \u003e Commands",
    "content": "hugo new theme Создать новую тему (каркас)\nОписание Create a new theme (skeleton) called [name] in ./themes. New theme is a skeleton. Please add content to the touched files. Add your name to the copyright line in the license and adjust the theme.toml file according to your needs.\nhugo new theme [name] [flags] Параметры -h, --help help for theme Параметры, наследуемые от родительских команд --clock string set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00 --config string config file (default is hugo.yaml|json|toml) --configDir string config dir (default \"config\") --debug debug output -d, --destination string filesystem path to write files to -e, --environment string build environment --ignoreVendorPaths string ignores any _vendor for module paths matching the given Glob pattern --logLevel string log level (debug|info|warn|error) --quiet build in quiet mode -M, --renderToMemory render to memory (mostly useful when running the server) -s, --source string filesystem path to read files relative from --themesDir string filesystem path to themes directory -v, --verbose verbose output СМОТРИ ТАКЖЕ hugo new\t- Создать новый контент",
    "description": "hugo new theme Создать новую тему (каркас)\nОписание Create a new theme (skeleton) called [name] in ./themes. New theme is a skeleton. Please add content to the touched files. Add your name to the copyright line in the license and adjust the theme.toml file according to your needs.\nhugo new theme [name] [flags] Параметры -h, --help help for theme Параметры, наследуемые от родительских команд --clock string set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00 --config string config file (default is hugo.yaml|json|toml) --configDir string config dir (default \"config\") --debug debug output -d, --destination string filesystem path to write files to -e, --environment string build environment --ignoreVendorPaths string ignores any _vendor for module paths matching the given Glob pattern --logLevel string log level (debug|info|warn|error) --quiet build in quiet mode -M, --renderToMemory render to memory (mostly useful when running the server) -s, --source string filesystem path to read files relative from --themesDir string filesystem path to themes directory -v, --verbose verbose output СМОТРИ ТАКЖЕ hugo new\t- Создать новый контент",
    "tags": [],
    "title": "hugo new theme",
    "uri": "/commands/hugo_new_theme/index.html"
  },
  {
    "breadcrumb": "",
    "content": "Hugo - один из самых популярных генераторов статических сайтов с открытым исходным кодом. Благодаря своей удивительной скорости и гибкости Hugo делает создание сайтов увлекательным занятием.",
    "description": "Самый быстрый в мире фреймворк для создания сайтов",
    "tags": [],
    "title": "Самый быстрый в мире фреймворк для создания сайтов",
    "uri": "/index.html"
  },
  {
    "breadcrumb": "Самый быстрый в мире фреймворк для создания сайтов \u003e Commands",
    "content": "hugo new site Создать новый сайт (каркас)\nОписание Создаёт новый сайт в указанном каталоге. Новый сайт будет иметь правильную структуру, но без контента и темы. Используйте hugo new [contentPath] для создания нового контента.\nhugo new site [path] [flags] Параметры -f, --force инициализация внутри непустого каталога --format string предпочтительный формат файлов (toml, yaml или json) (по-умолчанию \"toml\") -h, --help справка по site Опции, наследуемые от родительских команд --clock string set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00 --config string файл конфигурации (по-умолчанию hugo.yaml|json|toml) --configDir string каталог конфигурации (по-умолчанию \"config\") --debug debug output -d, --destination string filesystem path to write files to -e, --environment string среда сборки --ignoreVendorPaths string ignores any _vendor for module paths matching the given Glob pattern --logLevel string уровень лога (debug|info|warn|error) --quiet сборка в тихом режиме -M, --renderToMemory render to memory (mostly useful when running the server) -s, --source string filesystem path to read files relative from --themesDir string filesystem path to themes directory -v, --verbose детальность вывода СМОТРИ ТАКЖЕ hugo new\t- Создать новый контент",
    "description": "hugo new site Создать новый сайт (каркас)\nОписание Создаёт новый сайт в указанном каталоге. Новый сайт будет иметь правильную структуру, но без контента и темы. Используйте hugo new [contentPath] для создания нового контента.\nhugo new site [path] [flags] Параметры -f, --force инициализация внутри непустого каталога --format string предпочтительный формат файлов (toml, yaml или json) (по-умолчанию \"toml\") -h, --help справка по site Опции, наследуемые от родительских команд --clock string set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00 --config string файл конфигурации (по-умолчанию hugo.yaml|json|toml) --configDir string каталог конфигурации (по-умолчанию \"config\") --debug debug output -d, --destination string filesystem path to write files to -e, --environment string среда сборки --ignoreVendorPaths string ignores any _vendor for module paths matching the given Glob pattern --logLevel string уровень лога (debug|info|warn|error) --quiet сборка в тихом режиме -M, --renderToMemory render to memory (mostly useful when running the server) -s, --source string filesystem path to read files relative from --themesDir string filesystem path to themes directory -v, --verbose детальность вывода СМОТРИ ТАКЖЕ hugo new\t- Создать новый контент",
    "tags": [],
    "title": "hugo new site",
    "uri": "/commands/hugo_new_site/index.html"
  },
  {
    "breadcrumb": "Самый быстрый в мире фреймворк для создания сайтов \u003e Commands",
    "content": "hugo new content Создает новый контент\nОписание Создает новый файл с содержимым и автоматически устанавливает дату и заголовок. Она сама определит, какой тип файла создать, исходя из указанного пути.\nВы также можете указать тип с помощью -k KIND.\nЕсли в вашей теме или сайте есть архетипы, они будут использованы.\nУбедитесь, что вы запустили эту программу в корневом каталоге вашего сайта.\nhugo new content [path] [flags] Параметры -b, --baseURL string hostname (and path) to the root, e.g. https://spf13.com/ --cacheDir string filesystem path to cache directory -c, --contentDir string filesystem path to content directory --editor string редактировать новый контент с помощью этого редактора, если присутствует в системе -f, --force заменить файл если он уже существует -h, --help help for content -k, --kind string тип контента при создании --renderSegments strings named segments to render (configured in the segments config) -t, --theme strings используемая тема (располагается в /themes/THEMENAME/) Параметры, наследуемые от родительских команд --clock string set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00 --config string config file (default is hugo.yaml|json|toml) --configDir string config dir (default \"config\") --debug debug output -d, --destination string filesystem path to write files to -e, --environment string build environment --ignoreVendorPaths string ignores any _vendor for module paths matching the given Glob pattern --logLevel string log level (debug|info|warn|error) --quiet build in quiet mode -M, --renderToMemory render to memory (mostly useful when running the server) -s, --source string filesystem path to read files relative from --themesDir string filesystem path to themes directory -v, --verbose verbose output СМОТРИ ТАКЖЕ hugo new\t- Создать новый контент",
    "description": "hugo new content Создает новый контент\nОписание Создает новый файл с содержимым и автоматически устанавливает дату и заголовок. Она сама определит, какой тип файла создать, исходя из указанного пути.\nВы также можете указать тип с помощью -k KIND.\nЕсли в вашей теме или сайте есть архетипы, они будут использованы.\nУбедитесь, что вы запустили эту программу в корневом каталоге вашего сайта.\nhugo new content [path] [flags] Параметры -b, --baseURL string hostname (and path) to the root, e.g. https://spf13.com/ --cacheDir string filesystem path to cache directory -c, --contentDir string filesystem path to content directory --editor string редактировать новый контент с помощью этого редактора, если присутствует в системе -f, --force заменить файл если он уже существует -h, --help help for content -k, --kind string тип контента при создании --renderSegments strings named segments to render (configured in the segments config) -t, --theme strings используемая тема (располагается в /themes/THEMENAME/) Параметры, наследуемые от родительских команд --clock string set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00 --config string config file (default is hugo.yaml|json|toml) --configDir string config dir (default \"config\") --debug debug output -d, --destination string filesystem path to write files to -e, --environment string build environment --ignoreVendorPaths string ignores any _vendor for module paths matching the given Glob pattern --logLevel string log level (debug|info|warn|error) --quiet build in quiet mode -M, --renderToMemory render to memory (mostly useful when running the server) -s, --source string filesystem path to read files relative from --themesDir string filesystem path to themes directory -v, --verbose verbose output СМОТРИ ТАКЖЕ hugo new\t- Создать новый контент",
    "tags": [],
    "title": "hugo new content",
    "uri": "/commands/hugo_new_content/index.html"
  },
  {
    "breadcrumb": "Самый быстрый в мире фреймворк для создания сайтов \u003e Commands",
    "content": "hugo new Создает новый контент\nОписание Создайте новый файл с содержимым и автоматически установите дату и заголовок. Он сам определит, какой тип файла создать, исходя из указанного пути.\nВы также можете указать тип с помощью -k KIND.\nЕсли в вашей теме или сайте есть архетипы, они будут использованы.\nУбедитесь, что вы запустили эту программу в корневом каталоге вашего сайта.\nПараметры -h, --help справка по new Параметры, наследуемые от родительских команд --clock string set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00 --config string файл конфигурации (по-умолчанию hugo.yaml|json|toml) --configDir string каталог конфигурации (по-умолчанию \"config\") --debug debug output -d, --destination string путь файловой системы для записи файлов -e, --environment string среда сборки --ignoreVendorPaths string ignores any _vendor for module paths matching the given Glob pattern --logLevel string уровень журнала (debug|info|warn|error) --quiet сборка в тихом режиме -M, --renderToMemory render to memory (mostly useful when running the server) -s, --source string filesystem path to read files relative from --themesDir string filesystem path to themes directory -v, --verbose verbose output СМОТРИ ТАКЖЕ hugo\t- Создай свой сайт hugo new content\t- Создать новый контент hugo new site\t- Создать новый сайт (каркас) hugo new theme\t- Создать новую тему (каркас)",
    "description": "hugo new Создает новый контент\nОписание Создайте новый файл с содержимым и автоматически установите дату и заголовок. Он сам определит, какой тип файла создать, исходя из указанного пути.\nВы также можете указать тип с помощью -k KIND.\nЕсли в вашей теме или сайте есть архетипы, они будут использованы.\nУбедитесь, что вы запустили эту программу в корневом каталоге вашего сайта.\nПараметры -h, --help справка по new Параметры, наследуемые от родительских команд --clock string set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00 --config string файл конфигурации (по-умолчанию hugo.yaml|json|toml) --configDir string каталог конфигурации (по-умолчанию \"config\") --debug debug output -d, --destination string путь файловой системы для записи файлов -e, --environment string среда сборки --ignoreVendorPaths string ignores any _vendor for module paths matching the given Glob pattern --logLevel string уровень журнала (debug|info|warn|error) --quiet сборка в тихом режиме -M, --renderToMemory render to memory (mostly useful when running the server) -s, --source string filesystem path to read files relative from --themesDir string filesystem path to themes directory -v, --verbose verbose output СМОТРИ ТАКЖЕ hugo\t- Создай свой сайт hugo new content\t- Создать новый контент hugo new site\t- Создать новый сайт (каркас) hugo new theme\t- Создать новую тему (каркас)",
    "tags": [],
    "title": "hugo new",
    "uri": "/commands/hugo_new/index.html"
  },
  {
    "breadcrumb": "Самый быстрый в мире фреймворк для создания сайтов \u003e Commands",
    "content": "hugo config Отобразить конфигурацию сайта\nОписание Отображение конфигурации сайта, как по-умолчанию, так и пользовательских настроек.\nhugo config [command] [flags] Параметры -b, --baseURL string имя хоста (и путь) к корню, напр. https://spf13.com/ --cacheDir string путь файловой системы к директории кэша -c, --contentDir string путь файловой системы к директории контента --format string предпочтительный формат файла (toml, yaml or json) (по-умолчанию \"toml\") -h, --help справка по конфигурации --lang string язык, на котором будет отображаться конфигурация. По умолчанию выбирается первый определенный язык. --renderSegments strings именованные сегменты для рендеринга (настраиваются в конфигурации сегментов) -t, --theme strings используемая тема (расположена в /themes/THEMENAME/) Параметры, наследуемые от родительских команд --clock string set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00 --config string config file (default is hugo.yaml|json|toml) --configDir string config dir (default \"config\") --debug debug output -d, --destination string filesystem path to write files to -e, --environment string build environment --ignoreVendorPaths string ignores any _vendor for module paths matching the given Glob pattern --logLevel string log level (debug|info|warn|error) --quiet build in quiet mode -M, --renderToMemory render to memory (mostly useful when running the server) -s, --source string filesystem path to read files relative from --themesDir string filesystem path to themes directory -v, --verbose verbose output СМОТРИТЕ ТАКЖЕ hugo\t- Создай свой сайт hugo config mounts\t- Печать настроенных монтирований файлов",
    "description": "hugo config Отобразить конфигурацию сайта\nОписание Отображение конфигурации сайта, как по-умолчанию, так и пользовательских настроек.\nhugo config [command] [flags] Параметры -b, --baseURL string имя хоста (и путь) к корню, напр. https://spf13.com/ --cacheDir string путь файловой системы к директории кэша -c, --contentDir string путь файловой системы к директории контента --format string предпочтительный формат файла (toml, yaml or json) (по-умолчанию \"toml\") -h, --help справка по конфигурации --lang string язык, на котором будет отображаться конфигурация. По умолчанию выбирается первый определенный язык. --renderSegments strings именованные сегменты для рендеринга (настраиваются в конфигурации сегментов) -t, --theme strings используемая тема (расположена в /themes/THEMENAME/) Параметры, наследуемые от родительских команд --clock string set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00 --config string config file (default is hugo.yaml|json|toml) --configDir string config dir (default \"config\") --debug debug output -d, --destination string filesystem path to write files to -e, --environment string build environment --ignoreVendorPaths string ignores any _vendor for module paths matching the given Glob pattern --logLevel string log level (debug|info|warn|error) --quiet build in quiet mode -M, --renderToMemory render to memory (mostly useful when running the server) -s, --source string filesystem path to read files relative from --themesDir string filesystem path to themes directory -v, --verbose verbose output СМОТРИТЕ ТАКЖЕ hugo\t- Создай свой сайт hugo config mounts\t- Печать настроенных монтирований файлов",
    "tags": [],
    "title": "hugo config",
    "uri": "/commands/hugo_config/index.html"
  },
  {
    "breadcrumb": "Самый быстрый в мире фреймворк для создания сайтов \u003e Commands",
    "content": "hugo completion zsh Создаём скрипт автозаполнения для zsh\nОписание Создайте скрипт автозаполнения для оболочки zsh\nЕсли запуск для вашей оболочки еще не включено в вашей среде, то нужно включить его. Вы можете один раз выполнить следующее:\necho \"autoload -U compinit; compinit\" \u003e\u003e ~/.zshrc Чтобы выполнить запуск в текущем сеансе оболочки:\nsource \u003c(hugo completion zsh) Чтобы загрузить запуск для каждой новой сессии, выполните один раз:\nLinux: hugo completion zsh \u003e \"${fpath[1]}/_hugo\" macOS: hugo completion zsh \u003e $(brew --prefix)/share/zsh/site-functions/_hugo Чтобы эта настройка вступила в силу, вам нужно будет запустить новую оболочку.\nhugo completion zsh [flags] Параметры -h, --help справка для zsh --no-descriptions отключение описаний выполнения Параметры, наследуемые от родительских команд --clock string set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00 --config string config file (default is hugo.yaml|json|toml) --configDir string config dir (default \"config\") --debug debug output -d, --destination string filesystem path to write files to -e, --environment string build environment --ignoreVendorPaths string ignores any _vendor for module paths matching the given Glob pattern --logLevel string log level (debug|info|warn|error) --quiet build in quiet mode -M, --renderToMemory render to memory (mostly useful when running the server) -s, --source string filesystem path to read files relative from --themesDir string filesystem path to themes directory -v, --verbose verbose output СМОТРИТЕ ТАКЖЕ hugo completion\t- Создайте скрипт автозаполнения для указанной оболочки",
    "description": "hugo completion zsh Создаём скрипт автозаполнения для zsh\nОписание Создайте скрипт автозаполнения для оболочки zsh\nЕсли запуск для вашей оболочки еще не включено в вашей среде, то нужно включить его. Вы можете один раз выполнить следующее:\necho \"autoload -U compinit; compinit\" \u003e\u003e ~/.zshrc Чтобы выполнить запуск в текущем сеансе оболочки:\nsource \u003c(hugo completion zsh) Чтобы загрузить запуск для каждой новой сессии, выполните один раз:\nLinux: hugo completion zsh \u003e \"${fpath[1]}/_hugo\" macOS: hugo completion zsh \u003e $(brew --prefix)/share/zsh/site-functions/_hugo Чтобы эта настройка вступила в силу, вам нужно будет запустить новую оболочку.",
    "tags": [],
    "title": "hugo completion zsh",
    "uri": "/commands/hugo_completion_zsh/index.html"
  },
  {
    "breadcrumb": "Самый быстрый в мире фреймворк для создания сайтов \u003e Commands",
    "content": "hugo completion Создайте скрипт автозаполнения для указанной оболочки\nОписание Генерирует сценарий автозаполнения для hugo для указанной оболочки. Подробные сведения о том, как использовать сгенерированный скрипт, см. в справке по каждой подкоманде.\nПараметры -h, --help help for completion Параметры, наследуемые от родительских команд --clock string установка часов используя Hugo, напр. --clock 2021-11-06T22:30:00.00+09:00 --config string файл конфигурации (по умолчанию это hugo.yaml|json|toml) --configDir string директория конфигурации (по-умолчанию \"config\") --debug отладка вывода -d, --destination string путь файловой системы для записи файлов -e, --environment string среда сборки --ignoreVendorPaths string игнорирует любые _vendor для путей модулей, соответствующих заданному шаблону Glob --logLevel string уровень лога (debug|info|warn|error) --quiet сборка в тихом режиме -M, --renderToMemory рендеринг в память (в основном полезно при запуске сервера) -s, --source string путь к файловой системе для чтения файлов относительно --themesDir string путь к директории тем в файловой системе -v, --verbose детальность вывода СМОТРИ ТАКЖЕ hugo\t- Создай свой сайт hugo completion bash\t- Создайте скрипт автозаполнения для bash hugo completion fish\t- Создайте скрипт автозаполнения для fish hugo completion powershell\t- Создайте скрипт автозаполнения для powershell hugo completion zsh\t- Создайте скрипт автозаполнения для zsh",
    "description": "hugo completion Создайте скрипт автозаполнения для указанной оболочки\nОписание Генерирует сценарий автозаполнения для hugo для указанной оболочки. Подробные сведения о том, как использовать сгенерированный скрипт, см. в справке по каждой подкоманде.\nПараметры -h, --help help for completion Параметры, наследуемые от родительских команд --clock string установка часов используя Hugo, напр. --clock 2021-11-06T22:30:00.00+09:00 --config string файл конфигурации (по умолчанию это hugo.yaml|json|toml) --configDir string директория конфигурации (по-умолчанию \"config\") --debug отладка вывода -d, --destination string путь файловой системы для записи файлов -e, --environment string среда сборки --ignoreVendorPaths string игнорирует любые _vendor для путей модулей, соответствующих заданному шаблону Glob --logLevel string уровень лога (debug|info|warn|error) --quiet сборка в тихом режиме -M, --renderToMemory рендеринг в память (в основном полезно при запуске сервера) -s, --source string путь к файловой системе для чтения файлов относительно --themesDir string путь к директории тем в файловой системе -v, --verbose детальность вывода СМОТРИ ТАКЖЕ hugo\t- Создай свой сайт hugo completion bash\t- Создайте скрипт автозаполнения для bash hugo completion fish\t- Создайте скрипт автозаполнения для fish hugo completion powershell\t- Создайте скрипт автозаполнения для powershell hugo completion zsh\t- Создайте скрипт автозаполнения для zsh",
    "tags": [],
    "title": "hugo completion",
    "uri": "/commands/hugo_completion/index.html"
  },
  {
    "breadcrumb": "Самый быстрый в мире фреймворк для создания сайтов \u003e Commands",
    "content": "hugo build Создай свой сайт\nОписание build - это основная команда, используемая для создания вашего сайта Hugo.\nHugo - это быстрый и гибкий генератор статических сайтов созданный с любовью spf13 и его друзьями на языке Go.\nПолная документация доступна по адресу https://gohugo.io/.\nhugo build [flags] Параметры -b, --baseURL string hostname (and path) to the root, e.g. https://spf13.com/ -D, --buildDrafts include content marked as draft -E, --buildExpired include expired content -F, --buildFuture include content with publishdate in the future --cacheDir string filesystem path to cache directory --cleanDestinationDir remove files from destination not found in static directories --clock string set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00 --config string config file (default is hugo.yaml|json|toml) --configDir string config dir (default \"config\") -c, --contentDir string filesystem path to content directory --debug debug output -d, --destination string filesystem path to write files to --disableKinds strings disable different kind of pages (home, RSS etc.) --enableGitInfo add Git revision, date, author, and CODEOWNERS info to the pages -e, --environment string build environment --forceSyncStatic copy all files when static is changed. --gc enable to run some cleanup tasks (remove unused cache files) after the build -h, --help help for build --ignoreCache ignores the cache directory --ignoreVendorPaths string ignores any _vendor for module paths matching the given Glob pattern -l, --layoutDir string filesystem path to layout directory --logLevel string log level (debug|info|warn|error) --minify minify any supported output format (HTML, XML etc.) --noBuildLock don't create .hugo_build.lock file --noChmod don't sync permission mode of files --noTimes don't sync modification time of files --panicOnWarning panic on first WARNING log --poll string set this to a poll interval, e.g --poll 700ms, to use a poll based approach to watch for file system changes --printI18nWarnings print missing translations --printMemoryUsage print memory usage to screen at intervals --printPathWarnings print warnings on duplicate target paths etc. --printUnusedTemplates print warnings on unused templates. --quiet build in quiet mode --renderSegments strings named segments to render (configured in the segments config) -M, --renderToMemory render to memory (mostly useful when running the server) -s, --source string filesystem path to read files relative from --templateMetrics display metrics about template executions --templateMetricsHints calculate some improvement hints when combined with --templateMetrics -t, --theme strings themes to use (located in /themes/THEMENAME/) --themesDir string filesystem path to themes directory --trace file write trace to file (not useful in general) -v, --verbose verbose output -w, --watch watch filesystem for changes and recreate as needed СМОТРИ ТАКЖЕ hugo\t- Создай свой сайт",
    "description": "hugo build Создай свой сайт\nОписание build - это основная команда, используемая для создания вашего сайта Hugo.\nHugo - это быстрый и гибкий генератор статических сайтов созданный с любовью spf13 и его друзьями на языке Go.\nПолная документация доступна по адресу https://gohugo.io/.\nhugo build [flags] Параметры -b, --baseURL string hostname (and path) to the root, e.g. https://spf13.com/ -D, --buildDrafts include content marked as draft -E, --buildExpired include expired content -F, --buildFuture include content with publishdate in the future --cacheDir string filesystem path to cache directory --cleanDestinationDir remove files from destination not found in static directories --clock string set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00 --config string config file (default is hugo.yaml|json|toml) --configDir string config dir (default \"config\") -c, --contentDir string filesystem path to content directory --debug debug output -d, --destination string filesystem path to write files to --disableKinds strings disable different kind of pages (home, RSS etc.) --enableGitInfo add Git revision, date, author, and CODEOWNERS info to the pages -e, --environment string build environment --forceSyncStatic copy all files when static is changed. --gc enable to run some cleanup tasks (remove unused cache files) after the build -h, --help help for build --ignoreCache ignores the cache directory --ignoreVendorPaths string ignores any _vendor for module paths matching the given Glob pattern -l, --layoutDir string filesystem path to layout directory --logLevel string log level (debug|info|warn|error) --minify minify any supported output format (HTML, XML etc.) --noBuildLock don't create .hugo_build.lock file --noChmod don't sync permission mode of files --noTimes don't sync modification time of files --panicOnWarning panic on first WARNING log --poll string set this to a poll interval, e.g --poll 700ms, to use a poll based approach to watch for file system changes --printI18nWarnings print missing translations --printMemoryUsage print memory usage to screen at intervals --printPathWarnings print warnings on duplicate target paths etc. --printUnusedTemplates print warnings on unused templates. --quiet build in quiet mode --renderSegments strings named segments to render (configured in the segments config) -M, --renderToMemory render to memory (mostly useful when running the server) -s, --source string filesystem path to read files relative from --templateMetrics display metrics about template executions --templateMetricsHints calculate some improvement hints when combined with --templateMetrics -t, --theme strings themes to use (located in /themes/THEMENAME/) --themesDir string filesystem path to themes directory --trace file write trace to file (not useful in general) -v, --verbose verbose output -w, --watch watch filesystem for changes and recreate as needed СМОТРИ ТАКЖЕ hugo\t- Создай свой сайт",
    "tags": [],
    "title": "hugo build",
    "uri": "/commands/hugo_build/index.html"
  },
  {
    "breadcrumb": "Самый быстрый в мире фреймворк для создания сайтов \u003e Commands",
    "content": "hugo Создайте свой сайт\nОписание hugo - это основная команда, используемая для создания вашего сайта Hugo.\nHugo - это быстрый и гибкий генератор статических сайтов, созданный с любовью spf13 и его друзьями на языке Go.\nПолная документация доступна по адресу https://gohugo.io/.\nhugo [flags] Параметры -b, --baseURL string имя хоста (и путь) к корню, например, https://spf13.com/. -D, --buildDrafts включая содержимое, помеченное как черновик -E, --buildExpired включить просроченное содержимое -F, --buildFuture включать содержимое с датой публикации в будущем --cacheDir string путь файловой системы к каталогу кэша --cleanDestinationDir remove files from destination not found in static directories --clock string set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00 --config string config file (default is hugo.yaml|json|toml) --configDir string config dir (default \"config\") -c, --contentDir string filesystem path to content directory --debug debug output -d, --destination string filesystem path to write files to --disableKinds strings disable different kind of pages (home, RSS etc.) --enableGitInfo add Git revision, date, author, and CODEOWNERS info to the pages -e, --environment string build environment --forceSyncStatic copy all files when static is changed. --gc enable to run some cleanup tasks (remove unused cache files) after the build -h, --help справка по hugo --ignoreCache ignores the cache directory --ignoreVendorPaths string ignores any _vendor for module paths matching the given Glob pattern -l, --layoutDir string filesystem path to layout directory --logLevel string уровень лога (debug|info|warn|error) --minify minify any supported output format (HTML, XML etc.) --noBuildLock не создавать файл .hugo_build.lock --noChmod don't sync permission mode of files --noTimes don't sync modification time of files --panicOnWarning panic on first WARNING log --poll string set this to a poll interval, e.g --poll 700ms, to use a poll based approach to watch for file system changes --printI18nWarnings вывести отсутствующиее переводы --printMemoryUsage print memory usage to screen at intervals --printPathWarnings print warnings on duplicate target paths etc. --printUnusedTemplates print warnings on unused templates. --quiet build in quiet mode --renderSegments strings named segments to render (configured in the segments config) -M, --renderToMemory render to memory (mostly useful when running the server) -s, --source string filesystem path to read files relative from --templateMetrics display metrics about template executions --templateMetricsHints calculate some improvement hints when combined with --templateMetrics -t, --theme strings themes to use (located in /themes/THEMENAME/) --themesDir string filesystem path to themes directory --trace file write trace to file (not useful in general) -v, --verbose verbose output -w, --watch watch filesystem for changes and recreate as needed СМОТРИТЕ ТАКЖЕ hugo build\t- Создай свой сайт hugo completion\t- Создайте скрипт автозаполнения для указанной оболочки hugo config\t- Просмотр конфигурации сайта hugo convert\t- Перевести титульный лист в другой формат hugo deploy\t- Развертывание сайта в облаке провайдера hugo env\t- Отображение информации о версии и окружении hugo gen\t- Создание документации и стилей подсветки синтаксиса hugo import\t- Импорт сайта из другой системы hugo list\t- Список контента hugo mod\t- Управление модулями hugo new\t- Создание нового содержимого hugo server\t- Запуск встроенного веб-сервера hugo version\t- Отобразить версию",
    "description": "hugo Создайте свой сайт\nОписание hugo - это основная команда, используемая для создания вашего сайта Hugo.\nHugo - это быстрый и гибкий генератор статических сайтов, созданный с любовью spf13 и его друзьями на языке Go.\nПолная документация доступна по адресу https://gohugo.io/.\nhugo [flags] Параметры -b, --baseURL string имя хоста (и путь) к корню, например, https://spf13.com/. -D, --buildDrafts включая содержимое, помеченное как черновик -E, --buildExpired включить просроченное содержимое -F, --buildFuture включать содержимое с датой публикации в будущем --cacheDir string путь файловой системы к каталогу кэша --cleanDestinationDir remove files from destination not found in static directories --clock string set the clock used by Hugo, e.g. --clock 2021-11-06T22:30:00.00+09:00 --config string config file (default is hugo.yaml|json|toml) --configDir string config dir (default \"config\") -c, --contentDir string filesystem path to content directory --debug debug output -d, --destination string filesystem path to write files to --disableKinds strings disable different kind of pages (home, RSS etc.) --enableGitInfo add Git revision, date, author, and CODEOWNERS info to the pages -e, --environment string build environment --forceSyncStatic copy all files when static is changed. --gc enable to run some cleanup tasks (remove unused cache files) after the build -h, --help справка по hugo --ignoreCache ignores the cache directory --ignoreVendorPaths string ignores any _vendor for module paths matching the given Glob pattern -l, --layoutDir string filesystem path to layout directory --logLevel string уровень лога (debug|info|warn|error) --minify minify any supported output format (HTML, XML etc.) --noBuildLock не создавать файл .hugo_build.lock --noChmod don't sync permission mode of files --noTimes don't sync modification time of files --panicOnWarning panic on first WARNING log --poll string set this to a poll interval, e.g --poll 700ms, to use a poll based approach to watch for file system changes --printI18nWarnings вывести отсутствующиее переводы --printMemoryUsage print memory usage to screen at intervals --printPathWarnings print warnings on duplicate target paths etc. --printUnusedTemplates print warnings on unused templates. --quiet build in quiet mode --renderSegments strings named segments to render (configured in the segments config) -M, --renderToMemory render to memory (mostly useful when running the server) -s, --source string filesystem path to read files relative from --templateMetrics display metrics about template executions --templateMetricsHints calculate some improvement hints when combined with --templateMetrics -t, --theme strings themes to use (located in /themes/THEMENAME/) --themesDir string filesystem path to themes directory --trace file write trace to file (not useful in general) -v, --verbose verbose output -w, --watch watch filesystem for changes and recreate as needed СМОТРИТЕ ТАКЖЕ hugo build\t- Создай свой сайт hugo completion\t- Создайте скрипт автозаполнения для указанной оболочки hugo config\t- Просмотр конфигурации сайта hugo convert\t- Перевести титульный лист в другой формат hugo deploy\t- Развертывание сайта в облаке провайдера hugo env\t- Отображение информации о версии и окружении hugo gen\t- Создание документации и стилей подсветки синтаксиса hugo import\t- Импорт сайта из другой системы hugo list\t- Список контента hugo mod\t- Управление модулями hugo new\t- Создание нового содержимого hugo server\t- Запуск встроенного веб-сервера hugo version\t- Отобразить версию",
    "tags": [],
    "title": "hugo",
    "uri": "/commands/hugo/index.html"
  },
  {
    "breadcrumb": "Самый быстрый в мире фреймворк для создания сайтов",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Категории",
    "uri": "/categories/index.html"
  },
  {
    "breadcrumb": "Самый быстрый в мире фреймворк для создания сайтов \u003e Категории",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Категория :: Content Management",
    "uri": "/categories/content-management/index.html"
  },
  {
    "breadcrumb": "Самый быстрый в мире фреймворк для создания сайтов \u003e Категории",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Категория :: About",
    "uri": "/categories/about/index.html"
  },
  {
    "breadcrumb": "Самый быстрый в мире фреймворк для создания сайтов",
    "content": "",
    "description": "",
    "tags": [],
    "title": "Теги",
    "uri": "/tags/index.html"
  }
]
